/* Reset Básico */
* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
body {
  background-color: aliceblue;
  font-family: sans-serif;
}
/* .container 
  background-color: cyan; */
  /* display: flex; ajussta el ancho al espacio disponible y el inline-flex ajusta el anvho al espacio de los contenidos (ancho = main-size)*/
  /* display: inline-flex; */
  /* display: flex; */
  /* flex-direction: row-reverse; cambia el orden en que se lee */
  /* flex-direction: row; valor por default */
  /* flex-direction: column; ordena todo de arriba a abajo */
  /* flex-direction: column-reverse; hace lo mismo que el column solo que lo que va abajo lo pone arriba por lo que si es 1, 2, 3, 4. Ahora irá 4, 3, 2, 1. De abajo hacia arriba o arria a abajo */
  /* justify-content: start; valor predeterminado */
  /* justify-content: end; alinea los items hacia la derecha */
  /* justify-content: center; alinea los items al centro */
  /* justify-content: space-around; distribuye los items asignandoles un espacio alrededor de cada item */
  /* justify-content: space-between; Distrubuye un espacioproporcional entre los items */
  /* justify-content: space-evenly; Distribuye los items y los espacios son iguales */
  /* height: 500px Damos altura para probar aling-item */
  /* align-items: flex-start; Alinea hacia arriba */
  /* align-items: flex-end; Alinea hacia abajo */
  /* align-items: center; Alinea al centro */
  /* align-items: stretch; Se debe comentar la altura del item. Crecen en la altura de los elementos en el espacio disponible */
  /* align-items: baseline;
  align-items: center;
  justify-content: center;
  flex-direction: row-reverse; */
/* .container {
  width: 325px;
  height: 500px; */

  /* Flex-warp */

  /* display: flex;
  flex-wrap: nowrap; *//* valor por default. Esto hace que los items se austesn al espacio disponivle, sin dar salto de linea */
 /*  flex-wrap: wrap; */ /* esto dara saltos de linea en los items cuando no quepan en el espacio disponible. Si el contenedor no tiene alto definido, se ajustara automaticamente */
 /*  background-color: lightblue;
 */
  /* Aling-content  ESta propiedad trabaja cuando hay multiples lineas */

 /*  align-content: normal; */ /* Valor por default */
  /* align-content: start; */ /* Ajusta las lineas al inicio del eje transversal, osea que las alinea hacea arriba */
  /* align-content: flex-end; */ /* Ajusta las lineas al final del eje transversal, alinea hacia abajo */
  /* align-content: center;  *//* Ajusta las lineas al centro del eje transversal, las alinea al centro */
 /*  align-content: space-around; */ /* Distribuye el espacio al rededor de las lineas (arriba y abajo) */
  /* align-content: space-between; */  /* Distribuye el espacio entre las lineas. Sin considerar el contenedor */
  /* align-content: space-evenly; */ /* Distrubye el espacio proporcionalmente entre las lineas considerando el contenedor */
  /* align-content: stretch;  */ /* Esto va acrecer la altura de los items en el espacio disponible del eje transversal */
  /* justify-content: space-between; */
/* } */
/* .item {
  width: 100px;
  height: 100px; 
  background-color: coral;
  text-align: center;
  font-size: 24px;
  font-weight: bold;
  padding-top: 32px;
  border: 1px solid black;
} */
/* Vaos a usar pseudoclases para seleccionar los items individualmente */

/* 

Reto

  1. Cada item debe tener un tamaño de fuente distinto
  2. Cada item debe tener un padding top distinto
  3. Cada item debe tener un alto distinto. Que no exceda el alto del contenedor

*/

/* .item:nth-child(1) {
  background-color: blue;
  font-size: 70px;
  padding-top: 10px;
  height: 180px;
}
.item:nth-child(2) {
  background-color: red;
  font-size: 50px;
  padding-top: 100px;
  height: 160px;
}
.item:nth-child(3) {
  background-color: chartreuse;
  font-size: 200px;
  padding-top: 90px;
  height: 280px;
}
.item:nth-child(4) {
  background-color: blueviolet;
  font-size: 100px;
  padding-top: 100px;
  height: 200px;
}
 */

 /* 
 
 Flex shrink

 Es una propiedad que va a ajustar el factor de encogimiento o estrechamiento (encojimiento, apachurramiento, aplastamiento) de los elementos (items)

 flex-shrink:1 -> Este es el valor por default. Recibe valores nùmericos: 1, 2, 3, 4, ... Entre mas grande sea el nùmero; mayor serà su factor de decrecimiento
 
 */

 /* .item {
  flex-basis: 350px; */ /* ancho, flex-direction:row */
  /* flex-shrink: 1; */ /* este es el valor por default */

 /*  text-align: center;
  font-size: 24px;
  font-weight: bold;
  border: 1 px solid white;
  background-color: crimson;
 } */

 /* crear clases para los items */

 /* 
.tron1 {
  flex-shrink: 1;
  flex-grow: 1;
}
.tron2 {
  flex-shrink: 2;
  flex-grow: 2;
}
.tron3 {
  flex-shrink: 3;
  flex-grow: 3;
}
.tron4 {
  flex-shrink: 4;
  flex-grow: 4;
}  */

/* 

gap -> Espacio entre los elementos

Recibe valores en números con unidades relativas o absolutas

Esta propiedad se pasa al contenedor

*/


.container {
/*   width: 500px; */
  display: flex;
  height: 400px;
 /*  flex-wrap: wrap; */
  /* gap: 24px; */ /* Espacio entre los elementos */
  /* gap: 4rem; */ /* Unidades absolutas. px o relativas em o rem */
  /* column-gap: 24px; */ /* Espacio entre los elemtentos en la vertical */
  /* row-gap: 32px;  *//* Espacio entre los elemtentos en la horizaontal */
  /* gap: 10px 32px; *//* El primero es para el espaco horizontal y el segundo al espacio vertical */
  background-color: lightblue;
  align-items: center;
  justify-content: space-between;
}

.item {
  width: 100px;
  height: 100px;
  
  background-color: lightcoral;
  text-align: center;
  font-size: 24px;
  font-weight: bold;
  border: 1px solid black;
}

/* 

aling-delf -> Se pasa a uno o varios elementos en particulos

Va a alinear en el eje transversal a ese elemento unicamente. Y sobreescribe la propiedad de aling-items y su valor si se ha declarado en el contenedor

Recibe los mismos valores que aling-items

  start, ent, center, stretch, baseline

*/
